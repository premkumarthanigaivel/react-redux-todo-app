{"version":3,"sources":["components/Todostyles.js","components/TodoSlice.js","app/firebase.js","components/Todo.jsx","components/index.jsx","app/store.js","index.js"],"names":["GlobalStyles","createGlobalStyle","PageContainer","styled","Box","TODOBox","TODOList","List","TODOInput","TextField","attrs","size","variant","fullWidth","autoFocus","TODOListItemText","ListItemText","props","completed","TODOHeader","Typography","component","PageFooter","TodoSlice","createSlice","name","initialState","reducers","initTodo","state","action","payload","addTodo","id","value","checked","deleteTodo","slice","filter","item","todoId","completeTodo","map","actions","selectTodos","todo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","TODO","todoTasks","useSelector","dispatch","useDispatch","firstRenderRef","useRef","useState","newTodo","setNewTodo","useEffect","console","log","database","ref","on","snapshot","todoItems","val","current","tempState","push","todoListItems","ListItem","divider","Checkbox","color","style","marginRight","onChange","todoItem","todoItemsRef","fireBaseTodoId","orderByChild","equalTo","key","set","then","alert","catch","error","handleCompleteTodo","primary","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","FBTodoId","remove","message","handleDeleteTodo","placeholder","onKeyPress","event","nativeEvent","newTodoRef","uuid","target","e","children","TODOApplication","store","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","Helmet","rel","href","crossOrigin","document","getElementById"],"mappings":"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","file":"static/js/main.8df20d77.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components'\nimport List from '@material-ui/core/List'\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\n\nexport const GlobalStyles = createGlobalStyle`\n\nbody{\n  font-family: 'Tangerine', cursive;\n}\n\n`\n\n// Centers any child component both vertically & horizontally, prefer to keep one child component\nexport const PageContainer = styled(Box)`\n  background-color: #fff;\n  height: 90vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const TODOBox = styled(Box)`\n  box-shadow: 0px 0px 11px 1px cornflowerblue;\n  border-radius: 0.5em;\n  height: 70%;\n  width: 40%;\n  padding: 30px;\n  align-content: center;\n  justify-content: flex-end;\n  box-sizing: border-box;\n  background-color: #bbdefb63;\n  flex-direction: column;\n  display: flex;\n`\n\nexport const TODOList = styled(List)`\n  height: 77%;\n  overflow: scroll;\n  margin: 21px 0 !important;\n`\n\nexport const TODOInput = styled(TextField).attrs(() => ({\n  size: 'small',\n  variant: 'outlined',\n  fullWidth: true,\n  autoFocus: true\n}))``\n\nexport const TODOListItemText = styled(ListItemText)`\n  text-decoration: ${(props) => (props.completed ? 'line-through' : 'none')};\n`\n\nexport const TODOHeader = styled(Typography).attrs(() => ({\n  variant: 'h5',\n  component: 'h5'\n}))`\n  color: darkslateblue;\n  text-align: center;\n  margin-bottom: 20px !important;\n`\n\nexport const PageFooter = styled(Typography).attrs(() => ({\n  variant: 'h4',\n  component: 'h4'\n}))`\n  color: darkslateblue;\n  font-family: 'Tangerine', cursive !important;\n  position: absolute;\n  right: 15px;\n`\n","import { createSlice } from '@reduxjs/toolkit'\n\nlet initialState = []\n\n\n//slice\n\nexport const TodoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    initTodo: (state, action) => [...state, ...action.payload],\n    addTodo: (state, action) => [\n      ...state,\n      { id: action.payload.id, value: action.payload.value, checked: false }\n    ],\n    deleteTodo: (state, action) =>\n      state.slice().filter((item) => item.id != action.payload.todoId),\n    completeTodo: (state, action) =>\n      state.slice().map((item) => {\n        if (item.id === action.payload.todoId)\n          return { ...item, checked: !item.checked }\n        else return item\n      })\n  }\n})\n\n//event dispatchers - for further use in useDispatch\n\nexport const { initTodo, addTodo, deleteTodo, completeTodo } = TodoSlice.actions\n\n//selectors - for further use in useSelector\n\nexport const selectTodos = (state) => state.todo\n\n//to be used in configureStore, there all reducers are aggregated\n\nexport default TodoSlice.reducer\n","import firebase from 'firebase'\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: 'AIzaSyCt21ZNfRxHWhWr_4DsUioAY2_vGRXOBjw',\n  authDomain: 'todo-app-5e32f.firebaseapp.com',\n  databaseURL:\n    'https://todo-app-5e32f-default-rtdb.asia-southeast1.firebasedatabase.app',\n    \n  projectId: 'todo-app-5e32f',\n  storageBucket: 'todo-app-5e32f.appspot.com',\n  messagingSenderId: '850375518160',\n  appId: '1:850375518160:web:bca10bba82f09e0dc9bbd5'\n}\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n\nexport default firebase\n","import React, { useState, useEffect, useRef } from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { TODOBox, TODOList, TODOInput, TODOHeader } from './Todostyles'\nimport { TODOListItemText } from './Todostyles'\nimport { IconButton, Checkbox } from '@material-ui/core'\nimport { ListItemSecondaryAction } from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  initTodo,\n  addTodo,\n  completeTodo,\n  deleteTodo,\n  selectTodos\n} from './TodoSlice'\nimport firebase from '../app/firebase'\nimport uuid from 'uuid-random'\n\nconst ENTER_KEY = 'Enter'\n\nexport const TODO = () => {\n  const todoTasks = useSelector(selectTodos)\n  const dispatch = useDispatch()\n  const firstRenderRef = useRef(false)\n  const [newTodo, setNewTodo] = useState('')\n\n  //add todo\n  const handleAddTodo = (event) => {\n    if (event.nativeEvent.key === ENTER_KEY) {\n      const todoItemsRef = firebase.database().ref('todoitems')\n      let newTodoRef = todoItemsRef.push()\n      let newTodoId = uuid()\n      let todoItem = {\n        id: newTodoId,\n        value: event.target.value,\n        checked: false\n      }\n      newTodoRef\n        .set(todoItem)\n        .then(function () {\n          console.log('Item successfully added to firebase')\n          dispatch(addTodo(todoItem))\n          setNewTodo('')\n        })\n        .catch(function (error) {\n          console.log('Item failed to add into firebase')\n        })\n    }\n  }\n\n  //delete todo\n\n  const handleDeleteTodo = (todoId) => {\n    console.log('To be deleted Todo Item: ', todoId)\n    const todoItemsRef = firebase.database().ref('todoitems')\n    let FBTodoId = ''\n\n    todoItemsRef\n      .orderByChild('id')\n      .equalTo(todoId)\n      .on('child_added', function (snapshot) {\n        console.log('Firebase key: ', snapshot.key)\n        FBTodoId = snapshot.key\n      })\n    if (FBTodoId) {\n      let deleteChildRef = firebase.database().ref(`todoitems/${FBTodoId}`)\n      deleteChildRef\n        .remove()\n        .then(function () {\n          console.log('Remove succeeded.')\n          // alert('Remove succeeded.')\n          dispatch(deleteTodo({ todoId }))\n        })\n        .catch(function (error) {\n          console.log('Remove failed: ' + error.message)\n        })\n    }\n  }\n\n  // complete todo\n\n  const handleCompleteTodo = (todoItem) => {\n    const todoItemsRef = firebase.database().ref('todoitems')\n    let fireBaseTodoId = ''\n\n    todoItemsRef\n      .orderByChild('id')\n      .equalTo(todoItem.id)\n      .on('child_added', function (snapshot) {\n        console.log('Firebase key: ', snapshot.key)\n        fireBaseTodoId = snapshot.key\n      })\n\n    if (fireBaseTodoId) {\n      let completeChildRef = firebase\n        .database()\n        .ref(`todoitems/${fireBaseTodoId}`)\n\n      completeChildRef\n        .set({\n          checked: !todoItem.checked,\n          id: todoItem.id,\n          value: todoItem.value\n        })\n        .then(function () {\n          alert('Complete succeeded')\n          dispatch(completeTodo({ todoId: todoItem.id }))\n        })\n        .catch(function (error) {\n          console.log('Synchronization failed')\n        })\n    }\n  }\n\n  //init state of app from firebase\n  useEffect(() => {\n    console.log('>> FIRST RENDER')\n    const todoItemsRef = firebase.database().ref('todoitems')\n    todoItemsRef.on('value', (snapshot) => {\n      let todoItems = snapshot.val()\n      if (firstRenderRef.current === false) {\n        console.log('***  TODO INIT ***')\n        for (let item in todoItems) {\n          let tempState = []\n          tempState.push({\n            id: todoItems[item].id,\n            value: todoItems[item].value,\n            checked: todoItems[item].checked\n          })\n          dispatch(initTodo(tempState))\n        }\n      }\n      firstRenderRef.current = true\n    })\n  }, [])\n\n  const todoListItems = todoTasks.map((item) => (\n    <ListItem divider key={item.id}>\n      <Checkbox\n        color=\"primary\"\n        style={{ marginRight: '5px' }}\n        checked={item.checked}\n        onChange={() => handleCompleteTodo(item)}\n      />\n      <TODOListItemText\n        primary={item.value}\n        id={item.id}\n        completed={item.checked}\n      />\n      <ListItemSecondaryAction>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={() => handleDeleteTodo(item.id)}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  ))\n\n  return (\n    <TODOBox>\n      <TODOHeader>TO-DO APP</TODOHeader>\n      <TODOInput\n        placeholder=\"New to do\"\n        onKeyPress={handleAddTodo}\n        value={newTodo}\n        onChange={(e) => setNewTodo(e.target.value)}\n      />\n      <TODOList children={todoListItems}></TODOList>\n    </TODOBox>\n  )\n}\n","import React, { Fragment } from 'react'\nimport { TODO } from './Todo.jsx' \nimport { PageContainer,PageFooter, GlobalStyles } from './Todostyles'\nconst TODOApplication = () => {\n  return (\n    <Fragment>\n      <GlobalStyles />\n      <PageContainer>\n        <TODO />\n      </PageContainer>\n      <PageFooter>Authored by, Prem Kumar</PageFooter>\n    </Fragment>\n  )\n}\n\nexport { TODOApplication }\n","import { configureStore } from '@reduxjs/toolkit'\nimport todoReducer from '../components/TodoSlice'\n\nexport const store = configureStore({\n  reducer: {\n    todo: todoReducer\n  }\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { TODOApplication } from './components'\nimport { Provider } from 'react-redux'\nimport { store } from './app/store'\nimport { Helmet } from 'react-helmet'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Helmet>\n      <title>📝 TO-DO</title>\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Tangerine:wght@700&display=swap\"\n        rel=\"stylesheet\"\n      />\n    </Helmet>\n    <Provider store={store}>\n      <TODOApplication />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}