{"version":3,"sources":["components/Todostyles.js","components/TodoSlice.js","components/Todo.jsx","components/index.jsx","app/store.js","index.js"],"names":["GlobalStyles","createGlobalStyle","PageContainer","styled","Box","TODOBox","TODOList","List","TODOInput","TextField","attrs","size","variant","fullWidth","autoFocus","TODOListItemText","ListItemText","props","completed","TODOHeader","Typography","component","PageFooter","TodoSlice","createSlice","name","initialState","id","value","checked","reducers","addTodo","state","action","uuid","payload","deleteTodo","slice","filter","item","todoId","completeTodo","map","actions","selectTodos","todo","TODO","todoTasks","useSelector","dispatch","useDispatch","todoListItems","ListItem","divider","Checkbox","color","style","marginRight","onChange","primary","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","placeholder","onKeyPress","event","nativeEvent","key","target","children","TODOApplication","store","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","Helmet","rel","href","crossorigin","document","getElementById"],"mappings":"6QAOaA,EAAeC,YAAH,gFASZC,EAAgBC,YAAOC,IAAPD,CAAH,+JASbE,EAAUF,YAAOC,IAAPD,CAAH,sTAcPG,EAAWH,YAAOI,IAAPJ,CAAH,+FAMRK,EAAYL,YAAOM,KAAWC,OAAM,iBAAO,CACtDC,KAAM,QACNC,QAAS,WACTC,WAAW,EACXC,WAAW,KAJYX,CAAH,0BAOTY,EAAmBZ,YAAOa,IAAPb,CAAH,qDACR,SAACc,GAAD,OAAYA,EAAMC,UAAY,eAAiB,UAGvDC,EAAahB,YAAOiB,KAAYV,OAAM,iBAAO,CACxDE,QAAS,KACTS,UAAW,QAFalB,CAAH,+GASVmB,EAAanB,YAAOiB,KAAYV,OAAM,iBAAO,CACxDE,QAAS,KACTS,UAAW,QAFalB,CAAH,6I,sGClDVoB,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAZmB,CACnB,CACEC,GAAI,gBACJC,MAAO,6BACPC,SAAS,IASXC,SAAU,CACRC,QAAS,SAACC,EAAOC,GAAR,4BACJD,GADI,CAEP,CAAEL,GAAG,GAAD,OAAKO,OAAUN,MAAOK,EAAOE,QAAQP,MAAOC,SAAS,MAG3DO,WAAY,SAACJ,EAAOC,GAAR,OACVD,EAAMK,QAAQC,QAAO,SAACC,GAAD,OAAUA,EAAKZ,IAAMM,EAAOE,QAAQK,WAC3DC,aAAc,SAACT,EAAOC,GAAR,OACZD,EAAMK,QAAQK,KAAI,SAACH,GACjB,OAAIA,EAAKZ,KAAOM,EAAOE,QAAQK,OACtB,2BAAKD,GAAZ,IAAkBV,SAAUU,EAAKV,UACvBU,S,EAOiChB,EAAUoB,QAAhDZ,E,EAAAA,QAASK,E,EAAAA,WAAYK,E,EAAAA,aAIvBG,EAAc,SAACZ,GAAD,OAAWA,EAAMa,MAI7BtB,IAAf,Q,OCjCauB,EAAO,WAClB,IAAMC,EAAYC,YAAYJ,GACxBK,EAAWC,cAQXC,EAAgBJ,EAAUL,KAAI,SAACH,GAAD,OAClC,eAACa,EAAA,EAAD,CAAUC,SAAO,EAAjB,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,MAAO,CAAEC,YAAa,OACtB5B,QAASU,EAAKV,QACd6B,SAAU,kBAAMT,EAASR,EAAa,CAAED,OAAQD,EAAKZ,SAEvD,cAACZ,EAAD,CACE4C,QAASpB,EAAKX,MACdD,GAAIY,EAAKZ,GACTT,UAAWqB,EAAKV,UAElB,cAAC+B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,MACLC,aAAW,SACXC,QAAS,kBAAMf,EAASb,EAAW,CAAEI,OAAQD,EAAKZ,OAHpD,SAKE,cAAC,IAAD,cAMR,OACE,eAACtB,EAAD,WACE,cAACc,EAAD,wBACA,cAACX,EAAD,CAAWyD,YAAY,YAAYC,WAlCjB,SAACC,GANP,UAOVA,EAAMC,YAAYC,KACpBpB,EAASlB,EAAQ,CAAEH,MAAOuC,EAAMG,OAAO1C,YAiCvC,cAACtB,EAAD,CAAUiE,SAAUpB,QC/CpBqB,EAAkB,WACtB,OACE,qCACE,cAACxE,EAAD,IACA,cAACE,EAAD,UACE,cAAC,EAAD,MAEF,cAACoB,EAAD,0CCROmD,EAAQC,YAAe,CAClCC,QAAS,CACP9B,KAAM+B,K,QCEVC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,eAACC,EAAA,EAAD,WACE,uDACA,sBAAMC,IAAI,aAAaC,KAAK,iCAC5B,sBAAMD,IAAI,aAAaC,KAAK,4BAA4BC,aAAW,IACnE,sBACED,KAAK,2EACLD,IAAI,kBAGR,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,SAGJW,SAASC,eAAe,W","file":"static/js/main.17fa5e60.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components'\nimport List from '@material-ui/core/List'\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\n\nexport const GlobalStyles = createGlobalStyle`\n\nbody{\n  font-family: 'Tangerine', cursive;\n}\n\n`\n\n// Centers any child component both vertically & horizontally, prefer to keep one child component\nexport const PageContainer = styled(Box)`\n  background-color: #fff;\n  height: 90vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const TODOBox = styled(Box)`\n  box-shadow: 0px 0px 11px 1px cornflowerblue;\n  border-radius: 0.5em;\n  height: 70%;\n  width: 40%;\n  padding: 30px;\n  align-content: center;\n  justify-content: flex-end;\n  box-sizing: border-box;\n  background-color: #bbdefb63;\n  flex-direction: column;\n  display: flex;\n`\n\nexport const TODOList = styled(List)`\n  height: 77%;\n  overflow: scroll;\n  margin: 21px 0 !important;\n`\n\nexport const TODOInput = styled(TextField).attrs(() => ({\n  size: 'small',\n  variant: 'outlined',\n  fullWidth: true,\n  autoFocus: true\n}))``\n\nexport const TODOListItemText = styled(ListItemText)`\n  text-decoration: ${(props) => (props.completed ? 'line-through' : 'none')};\n`\n\nexport const TODOHeader = styled(Typography).attrs(() => ({\n  variant: 'h5',\n  component: 'h5'\n}))`\n  color: darkslateblue;\n  text-align: center;\n  margin-bottom: 20px !important;\n`\n\nexport const PageFooter = styled(Typography).attrs(() => ({\n  variant: 'h4',\n  component: 'h4'\n}))`\n  color: darkslateblue;\n  font-family: 'Tangerine', cursive !important;\n  position: absolute;\n  right: 15px;\n`\n","import { createSlice } from '@reduxjs/toolkit'\nimport uuid from 'uuid-random'\n\n//init state of app\n\nconst initialState = [\n  {\n    id: 'default-12345',\n    value: 'Redux - Wake up at 5:00 AM',\n    checked: false\n  }\n]\n\n//slice\n\nexport const TodoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    addTodo: (state, action) => [\n      ...state,\n      { id: `${uuid()}`, value: action.payload.value, checked: false }\n    ],\n\n    deleteTodo: (state, action) =>\n      state.slice().filter((item) => item.id != action.payload.todoId),\n    completeTodo: (state, action) =>\n      state.slice().map((item) => {\n        if (item.id === action.payload.todoId)\n          return { ...item, checked: !item.checked }\n        else return item\n      })\n  }\n})\n\n//event dispatchers - for further use in useDispatch\n\nexport const { addTodo, deleteTodo, completeTodo } = TodoSlice.actions\n\n//selectors - for further use in useSelector\n\nexport const selectTodos = (state) => state.todo\n\n//to be used in configureStore, there all reducers are aggregated\n\nexport default TodoSlice.reducer\n","import React, { useState, useEffect } from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { TODOBox, TODOList, TODOInput, TODOHeader } from './Todostyles'\nimport { TODOListItemText } from './Todostyles'\nimport { IconButton, Checkbox } from '@material-ui/core'\nimport { ListItemSecondaryAction } from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { addTodo, completeTodo, deleteTodo, selectTodos } from './TodoSlice'\n\nconst ENTER_KEY = 'Enter'\n\nexport const TODO = () => {\n  const todoTasks = useSelector(selectTodos)\n  const dispatch = useDispatch()\n\n  const handleAddTodo = (event) => {\n    if (event.nativeEvent.key === ENTER_KEY) {\n      dispatch(addTodo({ value: event.target.value }))\n    }\n  }\n\n  const todoListItems = todoTasks.map((item) => (\n    <ListItem divider>\n      <Checkbox\n        color=\"primary\"\n        style={{ marginRight: '5px' }}\n        checked={item.checked}\n        onChange={() => dispatch(completeTodo({ todoId: item.id }))}\n      />\n      <TODOListItemText\n        primary={item.value}\n        id={item.id}\n        completed={item.checked}\n      />\n      <ListItemSecondaryAction>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={() => dispatch(deleteTodo({ todoId: item.id }))}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  ))\n\n  return (\n    <TODOBox>\n      <TODOHeader>TO-DO APP</TODOHeader>\n      <TODOInput placeholder=\"New to do\" onKeyPress={handleAddTodo} />\n      <TODOList children={todoListItems}></TODOList>\n    </TODOBox>\n  )\n}\n","import React from 'react'\nimport { PageContainer } from './Todostyles'\nimport { TODO } from './Todo.jsx'\nimport { PageFooter, GlobalStyles } from './Todostyles'\nconst TODOApplication = () => {\n  return (\n    <>\n      <GlobalStyles />\n      <PageContainer>\n        <TODO />\n      </PageContainer>\n      <PageFooter>Authored by, Prem Kumar</PageFooter>\n    </>\n  )\n}\n\nexport { TODOApplication }\n","import { configureStore } from '@reduxjs/toolkit'\nimport todoReducer from '../components/TodoSlice'\n\nexport const store = configureStore({\n  reducer: {\n    todo: todoReducer\n  }\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { TODOApplication } from './components'\nimport { Provider } from 'react-redux'\nimport { store } from './app/store'\nimport { Helmet } from 'react-helmet'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Helmet>\n      <title>üìù TO-DO</title>\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n      <link\n        href=\"https://fonts.googleapis.com/css2?family=Tangerine:wght@700&display=swap\"\n        rel=\"stylesheet\"\n      />\n    </Helmet>\n    <Provider store={store}>\n      <TODOApplication />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}